name: Native Build

on:
  push:
    branches:
      - native
  pull_request:
    branches:
      - native
  release:
    types:
      - published

permissions:
  contents: write

concurrency:
  group: native-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:

  build-native:

    name: graal / ${{ matrix.os }} / ${{ matrix.jdk-version }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        jdk-version: [ 21 ]
        os:
          - ubuntu-latest
          - windows-latest
          - macos-14 # ARM64 OSX
          - macos-13 # Intel OSX

    steps:

      - uses: actions/checkout@v4

      # Setup CL, msbuild, etc.
      - name: Windows Only - Enable Windows Developer Command Prompt
        uses: ilammy/msvc-dev-cmd@v1.13.0
        if: runner.os == 'Windows'
        with:
          arch: x64

      - name: Set Up JDK ${{ matrix.jdk-version }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: 'temurin'

      - name: Set Up GraalVM ${{ matrix.jdk-version }}
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: ${{ matrix.jdk-version }}
          distribution: 'graalvm'
          #components: 'native-image' # default
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-${{ runner.arch }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-${{ runner.arch }}-maven-

      - name: Maven Build Graal VM
        run: ./mvnw -V -B -e -ff -ntp -Pnative clean package

      - name: Upload Jar
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: java-${{ matrix.jdk-version }}-${{ runner.os }}-${{ runner.arch }}-jar
          path: target/*-jar-with-dependencies.jar
          retention-days: 10
          if-no-files-found: error

      - name: Upload Native
        uses: actions/upload-artifact@v4
        continue-on-error: true
        with:
          name: java-${{ matrix.jdk-version }}-${{ runner.os }}-${{ runner.arch }}-native
          path: target/aistool*
          retention-days: 10
          if-no-files-found: error

      - name: Release Jar
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          RELEASE_NAME: aistool-${{ runner.os }}-${{ runner.arch }}-java-${{ matrix.jdk-version }}
        shell: bash
        run: |
          mv target/*-jar-with-dependencies.jar "$RELEASE_NAME.jar"
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            zip "$RELEASE_NAME-jar.zip" "$RELEASE_NAME.jar"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            7z a "$RELEASE_NAME-jar.zip" "$RELEASE_NAME.jar"
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            zip "$RELEASE_NAME-jar.zip" "$RELEASE_NAME.jar"
          else
            exit 1
          fi
          gh release upload "${{ github.ref_name }}" "$RELEASE_NAME-jar.zip"

      - name: Release Native
        if: github.event_name == 'release'
        env:
          GH_TOKEN: ${{ github.token }}
          GH_REPO: ${{ github.repository }}
          RELEASE_NAME: aistool-${{ runner.os }}-${{ runner.arch }}-java-${{ matrix.jdk-version }}
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            mv target/aistool* "aistool.app"
            zip "$RELEASE_NAME-native.zip" "aistool.app"
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            mv target/aistool*.exe "aistool.exe"
            7z a "$RELEASE_NAME-native.zip" "aistool.exe"
          elif [[ "$RUNNER_OS" == "Linux" ]]; then
            mv target/aistool* "aistool.elf"
            zip "$RELEASE_NAME-native.zip" "aistool.elf"
          else
            exit 1
          fi
          gh release upload "${{ github.ref_name }}" "$RELEASE_NAME-native.zip"
